Source: libconfig-any-perl
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders: Krzysztof Krzyzaniak (eloy) <eloy@debian.org>,
           Damyan Ivanov <dmn@debian.org>,
           Ansgar Burchardt <ansgar@debian.org>,
           gregor herrmann <gregoa@debian.org>,
           Salvatore Bonaccorso <carnil@debian.org>
Section: perl
Testsuite: autopkgtest-pkg-perl
Priority: optional
Build-Depends: debhelper (>= 9)
Build-Depends-Indep: libconfig-general-perl,
                     libconfig-tiny-perl,
                     libcpanel-json-xs-perl,
                     libjson-maybexs-perl,
                     libjson-perl,
                     libjson-pp-perl,
                     libjson-xs-perl,
                     libmodule-pluggable-perl | perl (<< 5.17.0),
                     libtest-exception-perl,
                     libxml-namespacesupport-perl,
                     libxml-simple-perl,
                     libyaml-libyaml-perl,
                     libyaml-perl,
                     libyaml-syck-perl,
                     perl
Standards-Version: 3.9.8
Vcs-Browser: https://anonscm.debian.org/cgit/pkg-perl/packages/libconfig-any-perl.git
Vcs-Git: https://anonscm.debian.org/git/pkg-perl/packages/libconfig-any-perl.git
Homepage: https://metacpan.org/release/Config-Any

Package: libconfig-any-perl
Architecture: all
Depends: libmodule-pluggable-perl | perl (<< 5.17.0),
         ${misc:Depends},
         ${perl:Depends}
Recommends: libconfig-general-perl,
            libconfig-tiny-perl,
            libcpanel-json-xs-perl | libjson-maybexs-perl | libjson-xs-perl | perl | libjson-pp-perl | libjson-perl,
            libxml-simple-perl | libxml-namespacesupport-perl,
            libyaml-libyaml-perl | libyaml-syck-perl | libyaml-perl
Description: module to load configuration from different file formats
 Config::Any provides a facility for Perl applications and libraries to load
 configuration data from multiple different file formats. It supports XML,
 YAML, JSON, Apache-style configuration, Windows INI files, and even Perl
 code.
 .
 The rationale for this module is as follows: Perl programs are deployed on
 many different platforms and integrated with many different systems. Systems
 administrators and end users may prefer different configuration formats than
 the developers. The flexibility inherent in a multiple format configuration
 loader allows different users to make different choices, without generating
 extra work for the developers. As a developer you only need to learn a single
 interface to be able to use the power of different configuration formats.
